#targetengine "indesign"{ // this AE CS 5    // Copyright (C) 2011 Fabian "fabiantheblind" Morón Zirfas  // http://www.the-moron.net // info [at] the - moron . net// This script is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// any later version.// This script is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.// You should have received a copy of the GNU General Public License// along with this program.  If not, see <http://www.gnu.org/licenses/.// UI PANEL based on:// rd_EditText.jsx// Copyright (c) 2006-2007 redefinery (Jeffrey R. Almasol). All rights reserved.// check it: www.redefinery.com// // Name: rd_EditText// Version: 2.0		function basic_panel(thisObj){				var x_data = new Object();	// Store globals in an object	// global variables	x_data.countGood = 0;	x_data.countBad = 0;	x_data.count = 0;	x_data.numExpr = 0;	x_data.l = 0;	x_data.onOff = 0;	x_data.fw = "";	x_data.chng2 = "";	x_data.include = false;	x_data.testmode = true;	x_data.testFound = 0;    x_data.progBarMax = 100;	x_data.scriptName = "tmn_bakeExpressions";	x_data.scriptTitle = x_data.scriptName + " v0.2";	x_data.str_tmn_SUrl = "http://www.the-moron.net";					x_data.winProgramFiles = Folder.commonFiles.parent.fsName;	x_data.winBrowserCmd = x_data.winProgramFiles + "\\Internet Explorer\\iexplore.exe";// You can chage the browser to use on windows here, use double slashes	x_data.macBrowserCmdStart = "osascript -e 'open location \"";	x_data.macBrowserCmdEnd = "\"'";					x_data.maxTextChars = 255;// Maximum number of characters supported by edittext control    x_data.outputTxt = "Nothing yet";		x_data.strTextHeading = {en: "Text (up to "+x_data.maxTextChars+" characters):"};	x_data.strGetText = {en: "Do it",};	x_data.strSetText = {en: "Set Text"};	x_data.strHelpHeader =  "tmn xpress regex";	x_data.str3xwtmn = "got to 3xW.T-M.N";	x_data.strHelp = {en: "?"}	x_data.strErrNoCompSel = {en: "Cannot perform operation. Please select or open a single composition in the Project window, and try again."};	x_data.strErrNoLayerSel = {en: "Cannot perform operation. Please select one or more  layers, and try again."};	x_data.strMinAE80 = {en: "This script requires Adobe After Effects CS3 or later."};	x_data.strHelpText = 	"Copyright (c) 2011 fabiantheblind\n"+	"tmn_xpress_regex can find and change expression code with Javascript RegExp Objects."+    "You can search just in the selected layers or include all precomps."+	"\n"+	"How to use it:\n"+    "\n"+     "You need to get familar with RegEx\n"+	"edit the \"find what\" and \"change to\" textboxes\n"+    "e.g. \"\\d+?\" finds one or more digits in ther shortesst sequence\n"+    "if you want to enclose them in brackets you can use \"(\\d+?)\" as find what and change it to \"[$1]\"\n"+     "in this case \"()\" creates a variable and \"$1\" reads out the first variable you created\n"+     "\n"+     "also a simple find what: \"Solid 1\" change to:\"myControler\" works\n"+     "\n"+	"when your RegEx is set hit the \"refresh\" button\n"+     "\n"+	"your REgExp is read in.\n"+	"\n" + 	"Hit \"Do it!\" 2 find and change\n"+     "\n"+	"it supports undo!\n"+     "\n"+	"visit http://www.themoron.net for more info"+ 	"all the UI stuff is taken from the fine scripts @ aescripts.com / redefinery.com / aenhancers.com\n"+	"thanx to all these guys for sharing open code"+ 	"\n"+	 "\n"+     "\n"	;	// xpress_regex_buildUI()	// 	// Description:	// This function localizes the given string variable based on the current locale.	// 	// Parameters:	//   strVar - The string variable's name.	// 	// Returns:	// String.	//	function x_localize(strVar){		return strVar["en"];	}		// xpress_regex_buildUI()	// 	// Description:	// This function builds the user interface.	// 	// Parameters:	// thisObj - Panel object (if script is launched from Window menu); null otherwise.	// 	// Returns:	// Window or Panel object representing the built user interface.	//	function x_buildUI(thisObj){		var pal = (thisObj instanceof Panel) ? thisObj : new Window("palette", x_data.scriptName, undefined, {resizeable:true});			if (pal != null){            // Add a progress bar with a label and initial value of 0, max value of 200.            var progBarLabel = pal.add("statictext", [10, 10, 180, 30], "Progress");            var progBar = pal.add("progressbar", [10, 10, 180, 30], 0, x_data.progBarMax);			var output = pal.add("statictext",[10,10,180,30],"Welcome");			var buttonHelp = pal.add("button", [10,10,180,30], "?");			var buttonDo = pal.add("button", [10,10,180,30], "Do it!");            var ncldPrecomps= pal.add("checkbox", [10,10,180,55], "include precomps?");			pal.layout.layout(true);			pal.layout.resize();						pal.onResizing = pal.onResize = function () {this.layout.resize();}			buttonHelp.onClick= function () {					if(typeof(helpWindow_unitTest) == "undefined") {							new helpWindow().run();							}						}             ncldPrecomps.onClick =  function () {x_data.include = ncldPrecomps.value;if(x_data.include==true){alert("This is highly experimental\nand not recommended. Sry.")}}		            buttonDo.onClick = do_Something;			output.enabled = true;		}				return pal;	}			// taken from Zorro the layer tagger	 // this function draws the help window	function helpWindow (){			this.windowRef = null;		}		helpWindow.prototype.run = function()		{			var win = new Window("palette", x_data.scriptName ,[100,0,600,600]);  // bounds = [left, top, right, bottom]			this.windowRef = win;			win.btnPanel = win.add("group", [10,10,600,600]);			win.btnPanel.text = win.btnPanel.add("statictext", [10,10,400,25], x_data.strHelpHeader);			win.btnPanel.warnBtn = win.btnPanel.add("edittext", [10,30,470,540], x_data.strHelpText, {multiline:true});			win.btnPanel.tmnBtn = win.btnPanel.add("button", [310, 550,470, 580], x_data.str3xwtmn);			win.btnPanel.tmnBtn.onClick = function() {				openURL(x_data.str_tmn_SUrl);							};			// Display the window			win.center();			win.show();			return true;				}					// This function open a URL in a browser - Copyright (c) 2006-2007 redefinery (Jeffrey R. Almasol). All rights reserved.	function openURL(url){		if ($.os.indexOf("Windows") != -1){			system.callSystem("cmd /c \""+x_data.winBrowserCmd + "\" " + url);		} else {			system.callSystem(x_data.macBrowserCmdStart + url + x_data.macBrowserCmdEnd);		}	}					// regexstuff start this is actually by fabiantheblind	// the rest is taken from the world wide world of webs	function do_Something(palObj){		app.documents.add();// 	var console = this.parent.children[2];//     var progbar = this.parent.children[1];//     console.text = "Start";// 		// 	// get the current active composition// 	var curComp = app.project.activeItem;// // 	// if ther is no comp// 	if (!curComp || !(curComp instanceof CompItem))	{// 		// alert and end the script// 		alert(x_data.strErrNoCompSel);// 		return;// 	}// 	// start undogroup// 	app.beginUndoGroup("change expressions");// // 	// get all the layers// 	var sellayers = curComp.selectedLayers;// 	if (!sellayers.length){// 		// alert and end the script// 		alert(x_data.strErrNoLayerSel);// 		return;// 	}// 	// 	// get them all into an array// 	var layers = new Array();// 		for (var i = 0; i < curComp.selectedLayers.length; i++){// 		layers.push(sellayers[i]);// 		}//     // // ****************************************************// // // // // ****************************************************// // 	//end undogroup// 	app.endUndoGroup();//     //     //     console.text = "Done"; 	}		// regexstuff end// again taken from the others		// main code:		//		// Prerequisites check// if (parseFloat(app.version) < 8.0){// 	alert(x_localize(x_data.strMinAE80), x_data.scriptName);// } else {	var tmn_xr_Pal = x_buildUI(thisObj);		if (tmn_xr_Pal != null){		// here would be a good place for a startup action			if (tmn_xr_Pal instanceof Window){				// Show the palette				tmn_xr_Pal.center();				tmn_xr_Pal.show();			} else{				tmn_xr_Pal.layout.layout(true);			}			// } // close Prerequisites	} // close xpress_regex 	}basic_panel(this); }// close all